version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: jnotes-postgres
    environment:
      POSTGRES_DB: jnotes
      POSTGRES_USER: jnotes
      POSTGRES_PASSWORD: jnotes_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - jnotes-network

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    container_name: jnotes-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jnotes-network

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: jnotes-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    networks:
      - jnotes-network

  # MinIO S3-compatible storage
  minio:
    image: minio/minio:latest
    container_name: jnotes-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: jnotes
      MINIO_ROOT_PASSWORD: jnotes_password
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - jnotes-network

  # Traefik Reverse Proxy
  traefik:
    image: traefik:v3.0
    container_name: jnotes-traefik
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
    networks:
      - jnotes-network
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=admin@jnotes.local
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json

volumes:
  postgres_data:
  redis_data:
  qdrant_data:
  minio_data:

networks:
  jnotes-network:
    driver: bridge
